name: Build and Push Docker Images to registries

on:
  push:
    tags:
      - 'v*' # NOTE we exclude 'd*' tags for now, but we may want to create some test containers for them too one day

  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build and push'
        required: true
        type: string

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        image:
          - backend
          - frontend
          - cascade
        registry: ["ghcr", "eccr"]
    steps:
      - name: Free Disk Space Before Build
        run: |
          echo "Disk space before cleanup:"
          df -h
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/lib/android/sdk/ndk
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo apt-get clean
          echo "Disk space after cleanup:"
          df -h

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to a Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry == 'ghcr' && 'ghcr.io' || 'eccr.ecmwf.int' }}
          username: ${{ matrix.registry == 'ghcr' && github.actor || secrets.ECMWF_DOCKER_REGISTRY_USERNAME }}
          password: ${{ matrix.registry == 'ghcr' && secrets.GITHUB_TOKEN || secrets.ECMWF_DOCKER_REGISTRY_ACCESS_TOKEN }}

      - name: Set env variables
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            export TAG=${{ github.event.inputs.tag }}
          else
            export TAG=${GITHUB_REF_NAME}
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "IMAGE_NAME=${{ matrix.image }}" >> $GITHUB_ENV
          if [[ "${{ matrix.registry }}" == "ghcr" ]]; then
            echo "REPO_IMAGE=ghcr.io/${{ github.repository }}/${{ matrix.image }}:$TAG" >> $GITHUB_ENV
          else
            echo "REPO_IMAGE=eccr.ecmwf.int/forecast-in-a-box/${{ matrix.image }}:$TAG" >> $GITHUB_ENV
          fi

      - name: Build image
        run: |
          echo "Building image: $IMAGE_NAME - with tag: ${TAG}"
          if [[ "${{ matrix.registry }}" == "ghcr" ]]; then
            docker compose build --build-arg TAG=${TAG} $IMAGE_NAME
          else
            docker compose -f docker-compose-ewc.yml build --build-arg TAG=${TAG} $IMAGE_NAME
          fi
        env:
          TAG: ${{ env.TAG }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          REPO_IMAGE: ${{ env.REPO_IMAGE }}

      - name: Tag image
        run: |
          docker tag fiab-$IMAGE_NAME $REPO_IMAGE
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          REPO_IMAGE: ${{ env.REPO_IMAGE }}

      - name: Push image
        run: |
          echo "Pushing image: $REPO_IMAGE"
          docker push $REPO_IMAGE # TODO enable once tested
        env:
          REPO_IMAGE: ${{ env.REPO_IMAGE }}
